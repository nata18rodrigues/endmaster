{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\NAT\\xC3\\\\Documents\\\\projetos\\\\Exercicios\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemList: '',\n      id: 1,\n      save: [{\n        id: 1,\n        texto: 'bom dia 1',\n        marcado: false\n      }, {\n        id: 2,\n        texto: 'bom dia 2',\n        marcado: false\n      }]\n    };\n    this.mudarValor = this.mudarValor.bind(this);\n    this.cadastrar = this.cadastrar.bind(this);\n    this.marcar = this.marcar.bind(this);\n    this.remover = this.remover.bind(this);\n  }\n\n  mudarValor(event) {\n    this.setState(state => {\n      return {\n        itemList: event.target.value\n      };\n    });\n  }\n\n  marcar(idparamarcar) {\n    function marcatext(objtos) {\n      if (idparamarcar.id == objtos.id) {\n        return {\n          id: objtos.id,\n          texto: objtos.texto,\n          marcardo: !objtos.marcado\n        };\n      }\n\n      return {\n        id: objtos.id,\n        texto: objtos.texto,\n        marcardo: objtos.marcado\n      };\n    }\n\n    this.setState({\n      save: this.state.save.map(marcatext)\n    });\n  }\n\n  remover(itempararemover) {\n    function filterByID(item) {\n      if (itempararemover.id != item.id) {\n        return true;\n      }\n\n      return false;\n    }\n\n    this.setState({\n      save: this.state.save.filter(filterByID)\n    });\n  }\n\n  cadastrar(event) {\n    event.preventDefault();\n    this.setState({\n      save: this.state.save.concat({\n        id: Math.random(),\n        texto: this.state.itemList\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.cadastrar,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.itemList,\n          onChange: this.mudarValor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"Submit\",\n          value: \"Adicionar\",\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.save.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textDecoration: 'line-through'\n          },\n          children: [item.texto, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.remover(item),\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.marcar(item),\n            children: \"Marcar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet domContainer = document.querySelector('#button_container');\nReactDOM.render( /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 89,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/NATÃƒ/Documents/projetos/Exercicios/src/index.js"],"names":["React","ReactDOM","List","Component","constructor","props","state","itemList","id","save","texto","marcado","mudarValor","bind","cadastrar","marcar","remover","event","setState","target","value","idparamarcar","marcatext","objtos","marcardo","map","itempararemover","filterByID","item","filter","preventDefault","concat","Math","random","render","textDecoration","domContainer","document","querySelector","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass List extends React.Component  {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n            itemList:'',\r\n            id:1,\r\n            save:[\r\n                { id:1, texto: 'bom dia 1', marcado: false},\r\n                { id:2, texto: 'bom dia 2', marcado: false}\r\n            ]\r\n        };\r\n\r\n        this.mudarValor = this.mudarValor.bind(this);\r\n        this.cadastrar = this.cadastrar.bind(this);\r\n        this.marcar = this.marcar.bind(this);\r\n        this.remover = this.remover.bind(this);\r\n\r\n    }\r\n    \r\n    mudarValor(event) {\r\n        this.setState((state) => {\r\n           return {itemList: event.target.value}\r\n        })\r\n    };\r\n\r\n    marcar(idparamarcar) {\r\n        function marcatext(objtos)    {\r\n            if(idparamarcar.id == objtos.id)  {\r\n                return  {\r\n                    id: objtos.id,\r\n                    texto: objtos.texto,\r\n                    marcardo: !objtos.marcado \r\n                    }\r\n                }\r\n                return {\r\n                    id: objtos.id,\r\n                    texto: objtos.texto,\r\n                    marcardo: objtos.marcado \r\n                }\r\n        }\r\n        this.setState({save: this.state.save.map(marcatext)\r\n        })\r\n    }\r\n    \r\n    \r\n    remover(itempararemover) {\r\n        function filterByID(item) {\r\n            if (itempararemover.id != item.id) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n        this.setState({save: this.state.save.filter(filterByID)\r\n        })\r\n    }\r\n    cadastrar(event) {\r\n        \r\n        event.preventDefault();\r\n        this.setState({save: this.state.save.concat({ id:Math.random() , texto:this.state.itemList })});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.cadastrar}>                    \r\n                    <input type=\"text\" value={this.state.itemList} onChange={this.mudarValor}/>\r\n                    <button type=\"Submit\" value=\"Adicionar\">Adicionar</button>\r\n                        </form>\r\n                    <ul>\r\n                    {this.state.save.map(item => (\r\n                            <li key={item.id} style={{\r\n                                textDecoration: 'line-through',\r\n                            }}>{item.texto}\r\n                                <button onClick={() => this.remover(item)}>Remover</button>\r\n\r\n                                <button onClick={this.marcar(item)}>Marcar</button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet domContainer = document.querySelector('#button_container');\r\nReactDOM.render(<List />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}